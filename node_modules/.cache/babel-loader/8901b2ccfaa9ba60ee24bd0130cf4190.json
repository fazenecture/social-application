{"ast":null,"code":"import _defineProperty from \"/Users/vivekkumarsingh/Drive/Random/Github/social-application/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/vivekkumarsingh/Drive/Random/Github/social-application/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/Users/vivekkumarsingh/Drive/Random/Github/social-application/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/vivekkumarsingh/Drive/Random/Github/social-application/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vivekkumarsingh/Drive/Random/Github/social-application/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/vivekkumarsingh/Drive/Random/Github/social-application/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vivekkumarsingh/Drive/Random/Github/social-application/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/vivekkumarsingh/Drive/Random/Github/social-application/src/components/Feed/FeedEdit/FeedEdit.js\";\nimport React, { Component, Fragment } from 'react';\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({\n      min: 5\n    })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({\n      min: 5\n    })]\n  }\n};\n\nvar FeedEdit = /*#__PURE__*/function (_Component) {\n  _inherits(FeedEdit, _Component);\n\n  var _super = _createSuper(FeedEdit);\n\n  function FeedEdit() {\n    var _this;\n\n    _classCallCheck(this, FeedEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    };\n\n    _this.postInputChangeHandler = function (input, value, files) {\n      if (files) {\n        generateBase64FromImage(files[0]).then(function (b64) {\n          _this.setState({\n            imagePreview: b64\n          });\n        }).catch(function (e) {\n          _this.setState({\n            imagePreview: null\n          });\n        });\n      }\n\n      _this.setState(function (prevState) {\n        var isValid = true;\n\n        var _iterator = _createForOfIteratorHelper(prevState.postForm[input].validators),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var validator = _step.value;\n            isValid = isValid && validator(value);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var updatedForm = _objectSpread(_objectSpread({}, prevState.postForm), {}, _defineProperty({}, input, _objectSpread(_objectSpread({}, prevState.postForm[input]), {}, {\n          valid: isValid,\n          value: files ? files[0] : value\n        })));\n\n        var formIsValid = true;\n\n        for (var inputName in updatedForm) {\n          formIsValid = formIsValid && updatedForm[inputName].valid;\n        }\n\n        return {\n          postForm: updatedForm,\n          formIsValid: formIsValid\n        };\n      });\n    };\n\n    _this.inputBlurHandler = function (input) {\n      _this.setState(function (prevState) {\n        return {\n          postForm: _objectSpread(_objectSpread({}, prevState.postForm), {}, _defineProperty({}, input, _objectSpread(_objectSpread({}, prevState.postForm[input]), {}, {\n            touched: true\n          })))\n        };\n      });\n    };\n\n    _this.cancelPostChangeHandler = function () {\n      _this.setState({\n        postForm: POST_FORM,\n        formIsValid: false\n      });\n\n      _this.props.onCancelEdit();\n    };\n\n    _this.acceptPostChangeHandler = function () {\n      var post = {\n        title: _this.state.postForm.title.value,\n        image: _this.state.postForm.image.value,\n        content: _this.state.postForm.content.value\n      };\n\n      _this.props.onFinishEdit(post);\n\n      _this.setState({\n        postForm: POST_FORM,\n        formIsValid: false,\n        imagePreview: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FeedEdit, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.editing && prevProps.editing !== this.props.editing && prevProps.selectedPost !== this.props.selectedPost) {\n        var postForm = {\n          title: _objectSpread(_objectSpread({}, prevState.postForm.title), {}, {\n            value: this.props.selectedPost.title,\n            valid: true\n          }),\n          image: _objectSpread(_objectSpread({}, prevState.postForm.image), {}, {\n            value: this.props.selectedPost.imagePath,\n            valid: true\n          }),\n          content: _objectSpread(_objectSpread({}, prevState.postForm.content), {}, {\n            value: this.props.selectedPost.content,\n            valid: true\n          })\n        };\n        this.setState({\n          postForm: postForm,\n          formIsValid: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.editing ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n          onClick: this.cancelPostChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"New Post\",\n          acceptEnabled: this.state.formIsValid,\n          onCancelModal: this.cancelPostChangeHandler,\n          onAcceptModal: this.acceptPostChangeHandler,\n          isLoading: this.props.loading,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"title\",\n              label: \"Title\",\n              control: \"input\",\n              onChange: this.postInputChangeHandler,\n              onBlur: this.inputBlurHandler.bind(this, 'title'),\n              valid: this.state.postForm['title'].valid,\n              touched: this.state.postForm['title'].touched,\n              value: this.state.postForm['title'].value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FilePicker, {\n              id: \"image\",\n              label: \"Image\",\n              control: \"input\",\n              onChange: this.postInputChangeHandler,\n              onBlur: this.inputBlurHandler.bind(this, 'image'),\n              valid: this.state.postForm['image'].valid,\n              touched: this.state.postForm['image'].touched\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-post__preview-image\",\n              children: [!this.state.imagePreview && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please choose an image.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 44\n              }, this), this.state.imagePreview && /*#__PURE__*/_jsxDEV(Image, {\n                imageUrl: this.state.imagePreview,\n                contain: true,\n                left: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"content\",\n              label: \"Content\",\n              control: \"textarea\",\n              rows: \"5\",\n              onChange: this.postInputChangeHandler,\n              onBlur: this.inputBlurHandler.bind(this, 'content'),\n              valid: this.state.postForm['content'].valid,\n              touched: this.state.postForm['content'].touched,\n              value: this.state.postForm['content'].value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this) : null;\n    }\n  }]);\n\n  return FeedEdit;\n}(Component);\n\nexport default FeedEdit;","map":{"version":3,"sources":["/Users/vivekkumarsingh/Drive/Random/Github/social-application/src/components/Feed/FeedEdit/FeedEdit.js"],"names":["React","Component","Fragment","Backdrop","Modal","Input","FilePicker","Image","required","length","generateBase64FromImage","POST_FORM","title","value","valid","touched","validators","min","image","content","FeedEdit","state","postForm","formIsValid","imagePreview","postInputChangeHandler","input","files","then","b64","setState","catch","e","prevState","isValid","validator","updatedForm","inputName","inputBlurHandler","cancelPostChangeHandler","props","onCancelEdit","acceptPostChangeHandler","post","onFinishEdit","prevProps","editing","selectedPost","imagePath","loading","bind"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imagePath,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n"]},"metadata":{},"sourceType":"module"}